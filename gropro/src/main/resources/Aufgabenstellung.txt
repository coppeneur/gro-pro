Beschreibung des Szenarios
Die Eisenbahn GmbH & Co. KG möchte ihr Eisenbahnnetz weiter ausbauen. Alle verkehrenden Züge müssen auf ihren Strecken durch Servicestationen versorgt werden. An den Servicestationen werden zum Beispiel Getränke, Essen und Hygieneprodukte zugeladen. Dabei müssen alle Züge auf ihrer Strecke mindestens eine Servicestation anlaufen.
Die MATSE AG erhält den Auftrag, auf Basis der bereitgestellten Streckenpläne die jeweils minimale Anzahl von Servicestationen sowie deren Standpunkt zu ermitteln. Der Streckenplan selbst darf nicht durch die MATSE AG verändert werden, eine Umleitung von Zügen oder das Hinzufügen von Haltestellen ist nicht erlaubt. Aus Kostengründen soll die Anzahl der Servicestationen minimal sein.
Die MATSE AG wird damit beauftragt ein Programm zu entwickeln, das für das gesamte Eisenbahnnetz die minimale Anzahl der Servicestationen und deren Standorte berechnet.
Ergänzende Hinweise zur Berechnung der Anzahl und Positionen der Servicestationen:
Gegeben ist die Menge an Zugverbindungen. Eine Zugverbindung definiert sich über die Bahnhöfe, die vom Zug angefahren werden. Jede Zugverbindung umfasst daher mindestens zwei unterschiedliche Bahnhöfe
Ein Zug fährt immer die gleiche Strecke hin und zurück. Die Entfernungen zwischen den Bahnhöfen und die Zeiten des Fahrplans sind für das algorithmische Problem irrelevant und sind entsprechend nicht angegeben.
Die Zugverbindungen und darin enthaltenen Bahnhöfe sind aus einer Textdatei einzulesen. Deren Aufbau ist unten exemplarisch dargestellt.
Wird eine Servicestation am Bahnhof positioniert, so kann diese alle Züge versorgen, die an diesem Bahnhof halten.
Für die Versorgung des Zuges ist es unerheblich, wo die Servicestation auf der Strecke liegt.
Falls für eine Probleminstanz mehrere Lösungen denkbar sind, so ist es ausreichend, eine gültige Lösung anzugeben.
Zur Optimierung der Laufzeit des Algorithmus zur Berechnung der Anzahl und der Standorte der Servicestationen sollen die eingelesenen Daten durch die nachfolgend beschriebenen Datenreduktionstechniken verringert werden. Die Korrektheit der Lösungen darf nicht durch die Datenreduk-tion verfälscht werden. Die Datenreduktion hat unter dieser Perspektive verlustfrei zu erfolgen. Eine Lösung, die für einen reduzierten Datensatz gefunden wird, muss auch für den ursprünglichen Datensatz in vollem Umfang gültig sein.
Die Bahnhöfe werden grundsätzlich durch das Kürzel des Stadtnamens eindeutig benannt (B = Berlin, K = Köln etc.). Wir gehen grundsätzlich davon aus, dass je Stadt nur ein Bahnhof existiert.
Beispiel
Eingabe: Zugverbindungen (bzw. Züge), die sich über die Menge der angelaufenen Bahnhöfe definieren.
Zug 1= {HH, H, B, L}
Zug 2= {K, FFM, S}
Zug 3= {HH, H, FFM, N, M}
Zug 4= {H, FFM, N}
Zug 5= {DA, FFM, N}
Zug 6= {HH, FFM, M}
Input-Datei Beispiel
# Beispiel 1
HH;H;B;L
K;FFM;S
HH;H;FFM;N;M
H;FFM;N
DA;FFM;N
HH;FFM;M
Erläuterung: Ein „#" am Zeilenbeginn läutet eine Kommentarzeile ein.

Datenreduktion
Aufgrund der Komplexität des Problems sind die Eingabedaten vor Berechnung einer Lösung zu minimieren. Eine Reduktionstechnik darf den Informationsgehalt der Eingabe nicht verändern, die Datenreduktion hat dahingehend verlustfrei zu erfolgen.
Datenreduktionstechnik 1
Regel: Duplikate innerhalb einer Zugverbindung können entfernt werden.
# Vor Datenreduktion 1
НН;H;K;HH
In diesem Fall kann in der ersten Verbindung einmal „HH" gelöscht werden.
# Nach Datenreduktion 1
HH;H;K

Datenreduktionstechnik 2: Reduktion der Anzahl der Bahnhöfe
Regel: Wenn alle Züge, die an Bahnhof A halten auch an Bahnhof B halten, dann darf Bahnhof A aus der Menge der Bahnhöfe (und von der Liste aller Zug-Haltestellen) entfernt werden.
Wir stellen fest, dass alle Züge, die in DA halten, auch in H halten. Gemäß der Regel zur Datenreduktionstechnik 2 dürfen wir DA aus allen
Zugverbindungen entfernen.
Die Aussage kann jedoch nicht umgedreht werden. Dass alle Züge, die in H halten, auch in DA halten, gilt hier nicht. Entsprechend darf ausschließich Bahnhof DA (und nicht H) entfernt werden.

# Datenreduktionstechnik 2
# Züge laufen gleiche Teilmenge an Bahnhöfen an
S;DA;H;K
FM;DA;H;K
M;DA;H;B
C;M;H;E

# Nach Datenreduktionstechnik 2
# Duplikate der Zugverbindungen sind enthalten
S;H;K
FFM;H;K
M;H;B
C;M;H;E

Datenreduktionstechnik 3: Reduktion der Zugverbindungen
Regel: Wenn Zug 1 an allen Bahnhöfen hält, an denen Zug 2 hält, dann darf Zug 1 aus der Liste der Züge entfernt werden.
Im Beispiel sind alle in Zugverbindung 2 enthaltenen Bahnhöfe auch in Zugverbindung 1 enthalten, daher darf Zugverbindung 1 entfernt werden.
#Datenreduktionstechnik 3
S;DA;H;K;M
DA;H
M;N;DA;B
C;M;E

# Nach Datenreduktionstechnik 3
DA;H
M;N;DA;B
C;M;E

Hinweis: Abhängig von der Implementierung des Servicestationen-Algorithmus ist es möglich, dass durch Anwendung der Daten niken eine andere korrekte Lösung gefunden wird.
Hinweise zum Generieren von Testdaten
Erzeugen Sie eigene Input-Dateien unterschiedlicher Größe, um die Effizienz des Algorithmus zur Berechnung der Anzahl und Posi stationen sowie der Datenreduktionstechniken zu analysieren.
Zum Generieren großer Test-Datensätze kann ein bestehendes Beispiel (bei gleichbleibender Lösungsmenge) stets durch eine Um duktionstechniken vergrößert werden: Je Zugverbindung (Zeile) können beliebig viele Bahnhöfe (Zeichenkombinationen) angehär
die Zeichenkombinationen nicht Teil einer weiteren Zugverbindung sind.